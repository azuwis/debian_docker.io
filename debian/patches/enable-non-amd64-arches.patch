Author: Paul R. Tagliamonte <paultag@debian.org>
Last-Update: 2014-05-07
Description: Let this build on all platforms.
Applied-Upstream: haha-lololol
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=747139
Forwarded: not-needed

diff --git a/daemon/execdriver/lxc/lxc_init_linux.go b/daemon/execdriver/lxc/lxc_init_linux.go
index 7288f58..b0055c3 100644
--- a/daemon/execdriver/lxc/lxc_init_linux.go
+++ b/daemon/execdriver/lxc/lxc_init_linux.go
@@ -1,5 +1,3 @@
-// +build amd64
-
 package lxc
 
 import (
diff --git a/daemon/execdriver/lxc/lxc_init_unsupported.go b/daemon/execdriver/lxc/lxc_init_unsupported.go
index d68cb91..951a286 100644
--- a/daemon/execdriver/lxc/lxc_init_unsupported.go
+++ b/daemon/execdriver/lxc/lxc_init_unsupported.go
@@ -1,4 +1,4 @@
-// +build !linux !amd64
+// +build !linux
 
 package lxc
 
diff --git a/daemon/graphdriver/aufs/mount_linux.go b/daemon/graphdriver/aufs/mount_linux.go
index 6082d9f..c86f1bb 100644
--- a/daemon/graphdriver/aufs/mount_linux.go
+++ b/daemon/graphdriver/aufs/mount_linux.go
@@ -1,5 +1,3 @@
-// +build amd64
-
 package aufs
 
 import "syscall"
diff --git a/daemon/graphdriver/aufs/mount_unsupported.go b/daemon/graphdriver/aufs/mount_unsupported.go
index 2735624..e291bef 100644
--- a/daemon/graphdriver/aufs/mount_unsupported.go
+++ b/daemon/graphdriver/aufs/mount_unsupported.go
@@ -1,4 +1,4 @@
-// +build !linux !amd64
+// +build !linux
 
 package aufs
 
diff --git a/daemon/graphdriver/btrfs/btrfs.go b/daemon/graphdriver/btrfs/btrfs.go
index f561244..e4e0274 100644
--- a/daemon/graphdriver/btrfs/btrfs.go
+++ b/daemon/graphdriver/btrfs/btrfs.go
@@ -1,4 +1,4 @@
-// +build linux,amd64
+// +build linux
 
 package btrfs
 
diff --git a/daemon/graphdriver/btrfs/dummy_unsupported.go b/daemon/graphdriver/btrfs/dummy_unsupported.go
index 6c44615..5efd180 100644
--- a/daemon/graphdriver/btrfs/dummy_unsupported.go
+++ b/daemon/graphdriver/btrfs/dummy_unsupported.go
@@ -1,3 +1,3 @@
-// +build !linux !amd64
+// +build !linux
 
 package btrfs
diff --git a/daemon/graphdriver/devmapper/attach_loopback.go b/daemon/graphdriver/devmapper/attach_loopback.go
index d2ab8c3..31d092a 100644
--- a/daemon/graphdriver/devmapper/attach_loopback.go
+++ b/daemon/graphdriver/devmapper/attach_loopback.go
@@ -1,4 +1,4 @@
-// +build linux,amd64
+// +build linux
 
 package devmapper
 
diff --git a/daemon/graphdriver/devmapper/deviceset.go b/daemon/graphdriver/devmapper/deviceset.go
index 48323f6..98d6e7a 100644
--- a/daemon/graphdriver/devmapper/deviceset.go
+++ b/daemon/graphdriver/devmapper/deviceset.go
@@ -1,4 +1,4 @@
-// +build linux,amd64
+// +build linux
 
 package devmapper
 
diff --git a/daemon/graphdriver/devmapper/devmapper.go b/daemon/graphdriver/devmapper/devmapper.go
index a6602c2..e44bd21 100644
--- a/daemon/graphdriver/devmapper/devmapper.go
+++ b/daemon/graphdriver/devmapper/devmapper.go
@@ -1,4 +1,4 @@
-// +build linux,amd64
+// +build linux
 
 package devmapper
 
diff --git a/daemon/graphdriver/devmapper/devmapper_log.go b/daemon/graphdriver/devmapper/devmapper_log.go
index cdeaed2..ec7809c 100644
--- a/daemon/graphdriver/devmapper/devmapper_log.go
+++ b/daemon/graphdriver/devmapper/devmapper_log.go
@@ -1,4 +1,4 @@
-// +build linux,amd64
+// +build linux
 
 package devmapper
 
diff --git a/daemon/graphdriver/devmapper/devmapper_test.go b/daemon/graphdriver/devmapper/devmapper_test.go
index 7c97d6b..9cf62f9 100644
--- a/daemon/graphdriver/devmapper/devmapper_test.go
+++ b/daemon/graphdriver/devmapper/devmapper_test.go
@@ -1,4 +1,4 @@
-// +build linux,amd64
+// +build linux
 
 package devmapper
 
diff --git a/daemon/graphdriver/devmapper/devmapper_wrapper.go b/daemon/graphdriver/devmapper/devmapper_wrapper.go
index 9f1b5a6..bd1c6fd 100644
--- a/daemon/graphdriver/devmapper/devmapper_wrapper.go
+++ b/daemon/graphdriver/devmapper/devmapper_wrapper.go
@@ -1,4 +1,4 @@
-// +build linux,amd64
+// +build linux
 
 package devmapper
 
diff --git a/daemon/graphdriver/devmapper/driver.go b/daemon/graphdriver/devmapper/driver.go
index cf82ad6..a4fcb76 100644
--- a/daemon/graphdriver/devmapper/driver.go
+++ b/daemon/graphdriver/devmapper/driver.go
@@ -1,4 +1,4 @@
-// +build linux,amd64
+// +build linux
 
 package devmapper
 
diff --git a/daemon/graphdriver/devmapper/ioctl.go b/daemon/graphdriver/devmapper/ioctl.go
index 8f403da..29caab0 100644
--- a/daemon/graphdriver/devmapper/ioctl.go
+++ b/daemon/graphdriver/devmapper/ioctl.go
@@ -1,4 +1,4 @@
-// +build linux,amd64
+// +build linux
 
 package devmapper
 
diff --git a/daemon/graphdriver/devmapper/mount.go b/daemon/graphdriver/devmapper/mount.go
index c9ff216..f64e995 100644
--- a/daemon/graphdriver/devmapper/mount.go
+++ b/daemon/graphdriver/devmapper/mount.go
@@ -1,4 +1,4 @@
-// +build linux,amd64
+// +build linux
 
 package devmapper
 
diff --git a/docker/docker.go b/docker/docker.go
index 56bcb04..4190631 100644
--- a/docker/docker.go
+++ b/docker/docker.go
@@ -259,7 +259,7 @@ func showVersion() {
 func checkKernelAndArch() error {
 	// Check for unsupported architectures
 	if runtime.GOARCH != "amd64" {
-		return fmt.Errorf("The docker runtime currently only supports amd64 (not %s). This will change in the future. Aborting.", runtime.GOARCH)
+		log.Printf("WARNING: The docker runtime currently only officially supports amd64 (not %s). THIS BUILD IS NOT OFFICIAL AND WILL NOT BE SUPPORTED BY DOCKER UPSTREAM.", runtime.GOARCH)
 	}
 	// Check for unsupported kernel versions
 	// FIXME: it would be cleaner to not test for specific versions, but rather
diff --git a/pkg/apparmor/apparmor.go b/pkg/apparmor/apparmor.go
index 704ee29..fb1574d 100644
--- a/pkg/apparmor/apparmor.go
+++ b/pkg/apparmor/apparmor.go
@@ -1,4 +1,4 @@
-// +build apparmor,linux,amd64
+// +build apparmor,linux
 
 package apparmor
 
diff --git a/pkg/apparmor/apparmor_disabled.go b/pkg/apparmor/apparmor_disabled.go
index 8d86ce9..937bf91 100644
--- a/pkg/apparmor/apparmor_disabled.go
+++ b/pkg/apparmor/apparmor_disabled.go
@@ -1,4 +1,4 @@
-// +build !apparmor !linux !amd64
+// +build !apparmor !linux
 
 package apparmor
 
diff --git a/pkg/mount/flags_linux.go b/pkg/mount/flags_linux.go
index b7124b1..483f129 100644
--- a/pkg/mount/flags_linux.go
+++ b/pkg/mount/flags_linux.go
@@ -1,5 +1,3 @@
-// +build amd64
-
 package mount
 
 import (
diff --git a/pkg/mount/flags_unsupported.go b/pkg/mount/flags_unsupported.go
index c894efe..b9731a5 100644
--- a/pkg/mount/flags_unsupported.go
+++ b/pkg/mount/flags_unsupported.go
@@ -1,4 +1,4 @@
-// +build !linux !amd64
+// +build !linux
 
 package mount
 
diff --git a/pkg/mount/mounter_linux.go b/pkg/mount/mounter_linux.go
index 70b7798..dd4280c 100644
--- a/pkg/mount/mounter_linux.go
+++ b/pkg/mount/mounter_linux.go
@@ -1,5 +1,3 @@
-// +build amd64
-
 package mount
 
 import (
diff --git a/pkg/mount/mounter_unsupported.go b/pkg/mount/mounter_unsupported.go
index ee27b35..de40fb5 100644
--- a/pkg/mount/mounter_unsupported.go
+++ b/pkg/mount/mounter_unsupported.go
@@ -1,4 +1,4 @@
-// +build !linux !amd64
+// +build !linux
 
 package mount
 
diff --git a/pkg/netlink/netlink_linux.go b/pkg/netlink/netlink_linux.go
index 14e30aa..92accd4 100644
--- a/pkg/netlink/netlink_linux.go
+++ b/pkg/netlink/netlink_linux.go
@@ -1,11 +1,8 @@
-// +build amd64
-
 package netlink
 
 import (
 	"encoding/binary"
 	"fmt"
-	"math/rand"
 	"net"
 	"sync/atomic"
 	"syscall"
@@ -951,7 +948,7 @@ func setBridgeMacAddress(s int, name string) error {
 	copy(ifr.IfrnName[:], name)
 
 	for i := 0; i < 6; i++ {
-		ifr.IfruHwaddr.Data[i] = int8(rand.Intn(255))
+		ifr.IfruHwaddr.Data[i] = randIfrDataByte()
 	}
 
 	ifr.IfruHwaddr.Data[0] &^= 0x1 // clear multicast bit
diff --git a/pkg/netlink/netlink_linux_arm.go b/pkg/netlink/netlink_linux_arm.go
new file mode 100644
index 0000000..7789ae2
--- /dev/null
+++ b/pkg/netlink/netlink_linux_arm.go
@@ -0,0 +1,9 @@
+package netlink
+
+import (
+	"math/rand"
+)
+
+func randIfrDataByte() uint8 {
+	return uint8(rand.Intn(255))
+}
diff --git a/pkg/netlink/netlink_linux_notarm.go b/pkg/netlink/netlink_linux_notarm.go
new file mode 100644
index 0000000..23c4a92
--- /dev/null
+++ b/pkg/netlink/netlink_linux_notarm.go
@@ -0,0 +1,11 @@
+// +build !arm
+
+package netlink
+
+import (
+	"math/rand"
+)
+
+func randIfrDataByte() int8 {
+	return int8(rand.Intn(255))
+}
diff --git a/pkg/netlink/netlink_unsupported.go b/pkg/netlink/netlink_unsupported.go
index 1359345..2c4d319 100644
--- a/pkg/netlink/netlink_unsupported.go
+++ b/pkg/netlink/netlink_unsupported.go
@@ -1,4 +1,4 @@
-// +build !linux !amd64
+// +build !linux
 
 package netlink
 
diff --git a/pkg/system/setns_linux.go b/pkg/system/setns_linux.go
index 2b6f9e7..6e4f924 100644
--- a/pkg/system/setns_linux.go
+++ b/pkg/system/setns_linux.go
@@ -11,7 +11,9 @@ import (
 // We need different setns values for the different platforms and arch
 // We are declaring the macro here because the SETNS syscall does not exist in th stdlib
 var setNsMap = map[string]uintptr{
+	"linux/386":   346,
 	"linux/amd64": 308,
+	"linux/arm":   374,
 }
 
 func Setns(fd uintptr, flags uintptr) error {
diff --git a/utils/uname_linux.go b/utils/uname_linux.go
index 2f4afb4..063f932 100644
--- a/utils/uname_linux.go
+++ b/utils/uname_linux.go
@@ -1,5 +1,3 @@
-// +build amd64
-
 package utils
 
 import (
diff --git a/utils/uname_unsupported.go b/utils/uname_unsupported.go
index 57b82ec..a6efdb7 100644
--- a/utils/uname_unsupported.go
+++ b/utils/uname_unsupported.go
@@ -1,4 +1,4 @@
-// +build !linux !amd64
+// +build !linux
 
 package utils
 
